--- 
- hosts: localhost
  gather_facts: no
  become: true
  vars:
    login: &login
      hostname: "{{ netapp_hostname }}"
      username: "{{ netapp_username }}"
      password: "{{ netapp_password }}"
      https: true
      validate_certs: false
    loginv: &loginv
      vserver: "{{ netapp_vserver }}"
  vars_files:
    - ./variables.yml

  tasks:
  - name: Install netapp-lib
    pip:
      name: netapp-lib
      state: present

  - name: Create Aggregates and wait 2 minutes until aggregate is online
    na_ontap_aggregate:
      state: present
      service_state: online
      unmount_volumes: True
      name: "{{ item.0 }}"
      disk_count: 5
      wait_for_online: True
      time_out: 120
      nodes: "{{ item.1 }}"
      <<: *login
    with_together:
      - ['aggr1_cluster_1_01' , 'aggr1_cluster_1_02'] 
      - ["{{ netapp_node1 }}" , "{{ netapp_node2 }}"]

  - name: Create Subnet
    na_ontap_net_subnet:
      state: present
      subnet: 192.168.123.0/24
      name: Demo
      ip_ranges: [ '192.168.123.131-192.168.123.192']
      gateway: 192.168.123.1
      ipspace: Default
      broadcast_domain: Default
      <<: *login

  - name: Create SVM
    na_ontap_svm:
      state: present
      name: "{{ netapp_vserver }}"
      root_volume: svm1_root
      root_volume_aggregate: aggr1_cluster_1_01
      root_volume_security_style: ntfs
      allowed_protocols: [nfs, cifs]
      <<: *login

  - name: Add licenses
    na_ontap_license:
      state: present
      # serial_number: 
      license_codes: ["{{nfs_code}}","{{cifs_code}}","{{flex_code}}","{{snapm_code}}"]
      <<: *login

  - name: Create Interface
    na_ontap_interface:
      state: present
      interface_name: "{{ item.0 }}"
      home_port: e0c
      home_node: "{{ item.1 }}"
      role: data
      protocols: [nfs, cifs]
      firewall_policy: mgmt-nfs
      address: "{{ item.2 }}"
      netmask: 255.255.255.0
      <<: *login
      <<: *loginv
    with_together:
      - ['svm1_cifs_nfs_lif1','svm1_cifs_nfs_lif2']
      - ["{{ netapp_node1 }}" , "{{ netapp_node2 }}"] 
      - [192.168.123.20, 192.168.123.21]
    
  - name: Create DNS
    na_ontap_dns:
      state: present
      domains: demo.netapp.com
      nameservers: 192.168.123.253
      skip_validation: true
      <<: *login
      <<: *loginv

  - name: Configure LIFS with DNS
    na_ontap_command:
      command: ['network', 'interface', 'modify','-vserver', '{{ netapp_vserver }}', '-lif', '{{ item }}', '-dns-zone', 'svm1.demo.netapp.com']
      <<: *login
    with_items:
      - svm1_cifs_nfs_lif1
      - svm1_cifs_nfs_lif2

  - name: Create nfs server
    na_ontap_nfs:
      state: present
      service_state: started
      nfsv3: enabled
      <<: *login
      <<: *loginv

  # - name: Create cifs_server
  #   na_ontap_cifs_server:
  #     state: present
  #     cifs_server_name: svm1
  #     domain: demo.netapp.com
  #     admin_user_name: "{{ netapp_username }}"
  #     admin_password: "{{ netapp_password }}"
        # <<: *login
        # <<: *loginv

  - name: Create ExportPolicyRule
    na_ontap_export_policy_rule:
      state: present
      name: default
      client_match: 0.0.0.0/0
      ro_rule: any
      rw_rule: any
      rule_index: 1
      protocol: nfs,cifs
      super_user_security: any
      # allow_suid: true
      <<: *login
      <<: *loginv

  - name: Create FlexVol
    na_ontap_volume:
      state: present
      name: "{{ item.0 }}"
      # is_infinite: False
      aggregate_name: aggr1_cluster_1_01
      size: 10
      size_unit: gb
      space_guarantee: none
      policy: default
      percent_snapshot_space: 5
      junction_path: /{{ item.1 }}
      # wait_for_completion: True
      <<: *login
      <<: *loginv
    with_together:
      - ["{{netapp_vol1}}" , "{{netapp_vol2}}"]
      - ['{{netapp_vol1}}' , '{{netapp_vol1}}/users'] 

  #not idempotent 
  - name: Create Qtrees
    na_ontap_qtree:
      state: present
      name: "{{ item }}"
      flexvol_name: "{{ netapp_vol2 }}"
      <<: *login
      <<: *loginv
    with_items:
      - "{{ netapp_qtree1 }}"
      - "{{ netapp_qtree2 }}"

  - name: Create another Export Policy for the Qtrees
    na_ontap_export_policy:
      state: present
      name: jh1-only
      <<: *login
      <<: *loginv

  - name: Create ExportPolicyRule for jh1
    na_ontap_export_policy_rule:
      state: present
      name: jh1-only
      client_match: 192.168.123.61 #not sure
      ro_rule: any
      rw_rule: any
      rule_index: 1
      # protocol: nfs,cifs
      super_user_security: any
      # allow_suid: true
      <<: *login
      <<: *loginv

  - name: Applying jh1 policy to qtree
    na_ontap_command:
      command: ['volume', 'qtree', 'modify','-vserver', '{{ netapp_vserver }}', '-volume', '{{ netapp_vol2 }}', '-qtree', '{{ netapp_qtree2 }}', '-export-policy', 'jh1-only']
      <<: *login